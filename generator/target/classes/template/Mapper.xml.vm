<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="${basePackage}.repository.${tableNameB}Mapper" >
  <resultMap id="BaseResultMap" type="${basePackage}.model.${tableNameB}" >
#foreach($columnObj in $columnObjs)
#if(${columnObj.columnNameY}==${pk.columnName})
	<id column="${columnObj.columnNameY}" property="${columnObj.columnName}"  />
#else
	<result column="${columnObj.columnNameY}" property="${columnObj.columnName}"  />
#end
#end
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
#set($n=0)
#foreach($columnObj in $columnObjs)
#if($n==0)
#set($columns=$!{columnObj.columnNameY})
#else
#set($columns=$!{columnObj.columnNameY}+","+$!{columns})
#end
#set($n=$n+1)
#end
    ${columns}
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.aerotop.iplatform.common.util.CriticalUtil" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from ${tableName}
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from ${tableName}
    where ${pk.columnNameY} = #{${pk.columnName}}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from ${tableName}
    where ${pk.columnNameY} = #{${pk.columnName}}
  </delete>
  <delete id="deleteByExample" parameterType="cn.aerotop.iplatform.common.util.CriticalUtil" >
    delete from ${tableName}
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="${basePackage}.model.${tableNameB}" >
    insert into ${tableName} (${columns})
    values (
#set($i=0)
#foreach($columnObj in $columnObjs)
#set($i=$i+1)
#if($i==$columnObjs.length)
 	#{${columnObj.columnNameY}}
#else
	#{${columnObj.columnNameY}},
#end
#end
	)
  </insert>
  <insert id="insertSelective" parameterType="${basePackage}.model.${tableNameB}" >
    insert into ${tableName}
    <trim prefix="(" suffix=")" suffixOverrides="," >
#foreach($columnObj in $columnObjs)
	  <if test="${columnObj.columnName} != null" >
        ${columnObj.columnNameY},
      </if>
#end
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
#foreach($columnObj in $columnObjs)
	  <if test="${columnObj.columnName} != null" >
		#{${columnObj.columnName}},
      </if>
#end
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.aerotop.iplatform.common.util.CriticalUtil" resultType="java.lang.Integer" >
    select count(*) from ${tableName}
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update ${tableName}
    <set >
#foreach($columnObj in $columnObjs)
	  <if test="record.${columnObj.columnName} != null" >
        ${columnObj.columnNameY} = #{record.${columnObj.columnName}},
      </if>
#end
	</set>
  </update>
  <update id="updateByExample" parameterType="map" >
    update ${tableName}
    set 
#set($j=0)
#foreach($columnObj in $columnObjs)
#set($j=$j+1)
#if($j==$columnObjs.length)
 	  ${columnObj.columnNameY}=#{record.${columnObj.columnName}}
#else
	 ${columnObj.columnNameY}=#{record.${columnObj.columnName}},
#end
#end
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="${basePackage}.model.${tableNameB}" >
    update ${tableName}
    <set >
#foreach($columnObj in $columnObjs)
#if(${columnObj.columnName}!=${pk.columnName})
	  <if test="${columnObj.columnName} != null" >
        ${columnObj.columnNameY} = #{${columnObj.columnName}},
      </if>
#else
#set($pkname=${columnObj.columnName})
#end
#end
    </set>
    where ${pk.columnName} = #{${pkname}}
  </update>
  <update id="updateByPrimaryKey" parameterType="${basePackage}.model.${tableNameB}" >
    update ${tableName}
    set 
#set($m=0)
#foreach($columnObj in $columnObjs)
#if(${columnObj.columnNameY}!=${pk.columnName})
#set($m=$m+1)
#if($m==$columnObjs.length)
 	  ${columnObj.columnNameY}=#{${columnObj.columnName}}
#else
	 ${columnObj.columnNameY}=#{${columnObj.columnName}},
#end
#end
#end
    where ${pk.columnNameY} = #{${pk.columnName}}
  </update>
</mapper>